import type { 
  DimensionScore, 
  RecommendationItem, 
  PersonalizedRecommendations 
} from '../types/Recommendations';

export class SpiritualAIService {
  private modelName: string;
  private apiUrl: string;

  constructor() {
    // DialoGPT model trained on spiritual texts
    this.modelName = 'Siyris/DialoGPT-medium-SIY';
    this.apiUrl = 'https://api-inference.huggingface.co/models/Siyris/DialoGPT-medium-SIY';
    
    console.log(`üîÆ Spiritual AI Service initialized with model: ${this.modelName}`);
  }

  /**
   * Generate spiritual AI-powered personalized recommendations
   */
  async generateSpiritualRecommendations(
    scores: DimensionScore[], 
    sessionId: string,
    userInfo?: { firstName: string; lastName: string }
  ): Promise<PersonalizedRecommendations> {
    try {
      console.log('=== GENERATING SPIRITUAL AI RECOMMENDATIONS ===');
      console.log('üìä Input scores:', scores);
      console.log('üë§ User info:', userInfo);
      
      const userName = userInfo?.firstName || 'Sevgili ruh';
      const recommendations: RecommendationItem[] = [];

      // Generate spiritual recommendations for each dimension
      for (const [index, score] of scores.entries()) {
        const percentage = (score.score / score.maxScore) * 100;
        const spiritualRec = await this.generateSpiritualRecommendationForDimension(
          score, 
          percentage, 
          userName,
          index
        );
        recommendations.push(spiritualRec);
      }

      // Generate overall spiritual insight
      const overallInsight = await this.generateSpiritualOverallInsight(scores, userName);

      return {
        sessionId,
        userId: userInfo ? `${userInfo.firstName}_${userInfo.lastName}` : undefined,
        recommendations,
        generatedAt: new Date().toISOString(),
        overallInsight
      };
    } catch (error) {
      console.error('Spiritual AI recommendation generation failed:', error);
      // Fallback to enhanced spiritual recommendations
      return this.generateEnhancedSpiritualFallback(scores, sessionId, userInfo);
    }
  }

  /**
   * Generate spiritual recommendation for a specific dimension
   */
  private async generateSpiritualRecommendationForDimension(
    score: DimensionScore,
    percentage: number,
    userName: string,
    index: number
  ): Promise<RecommendationItem> {
    const dimensionMap: { [key: string]: string } = {
      'DM': 'Karar Verme',
      'IN': 'ƒ∞nisiyatif Alma', 
      'AD': 'Adaptasyon',
      'CM': 'ƒ∞leti≈üim',
      'ST': 'Stratejik D√º≈ü√ºnce',
      'TO': 'Takƒ±m √áalƒ±≈ümasƒ±',
      'RL': 'Risk Liderliƒüi',
      'RI': 'Risk Zekasƒ±'
    };
    
    const dimensionName = dimensionMap[score.dimension] || score.dimension;
    const type = percentage >= 80 ? 'mastery' : percentage >= 50 ? 'growth' : 'foundation';

    try {
      // Create spiritual prompt for this dimension
      const prompt = this.createSpiritualPrompt(dimensionName, percentage, userName);
      
      // Get spiritual AI response
      const aiResponse = await this.callSpiritualAI(prompt);
      
      // Parse and structure the response
      const spiritualGuidance = this.parseSpiritualResponse(aiResponse, dimensionName);

      return {
        id: `spiritual_${score.dimension}_${index}`,
        type: type as 'mastery' | 'growth' | 'foundation',
        title: spiritualGuidance.title,
        description: spiritualGuidance.description,
        dimension: dimensionName,
        score: percentage,
        actionItems: spiritualGuidance.actionItems,
        resources: spiritualGuidance.resources
      };
    } catch (error) {
      console.warn(`Failed to generate spiritual recommendation for ${dimensionName}:`, error);
      return this.createFallbackSpiritualRecommendation(score, percentage, index, dimensionName);
    }
  }

  /**
   * Create spiritual prompt for the AI model
   */
  private createSpiritualPrompt(dimensionName: string, percentage: number, userName: string): string {
    const level = percentage >= 80 ? 'y√ºksek' : percentage >= 50 ? 'orta' : 'geli≈üim gerektiren';
    
    return `${userName}, ${dimensionName} alanƒ±nda ${level} seviyede performans g√∂steriyorsun (%${percentage.toFixed(1)}). Bu ruhsal yolculukta sana nasƒ±l rehberlik edebilirim? Hangi enerji merkezleri √ºzerinde √ßalƒ±≈ümalƒ±sƒ±n ve hangi manevi pratikler seni daha da ileriye ta≈üƒ±yabilir?`;
  }

  /**
   * Call the spiritual DialoGPT model
   */
  private async callSpiritualAI(prompt: string): Promise<string> {
    console.log('üîÆ Calling Spiritual AI model...');
    console.log('üìù Prompt:', prompt);

    try {
      // First try the custom spiritual model
      const response = await this.tryCustomSpiritualModel(prompt);
      if (response) {
        return response;
      }
    } catch (error) {
      console.warn('‚ùå Custom spiritual model failed, trying fallback:', error);
    }

    try {
      // Fallback to Microsoft DialoGPT with spiritual context
      const response = await this.tryMicrosoftDialoGPT(prompt);
      if (response) {
        return response;
      }
    } catch (error) {
      console.warn('‚ùå Microsoft DialoGPT failed, using spiritual fallback:', error);
    }

    // Final fallback - generate spiritual response based on prompt
    return this.generateSpiritualFallbackResponse(prompt);
  }

  /**
   * Try the custom Siyris spiritual model
   */
  private async tryCustomSpiritualModel(prompt: string): Promise<string | null> {
    try {
      const response = await fetch(this.apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'User-Agent': 'SpiritualGuidance/1.0',
        },
        body: JSON.stringify({
          inputs: prompt,
          parameters: {
            max_length: 300,
            temperature: 0.8,
            top_p: 0.9,
            do_sample: true,
            pad_token_id: 50256
          },
          options: {
            wait_for_model: true,
            use_cache: false
          }
        })
      });

      if (!response.ok) {
        const errorText = await response.text();
        console.error(`üö® Custom Spiritual AI API Error [${response.status}]:`, errorText);
        throw new Error(`Custom Spiritual AI API request failed: ${response.status} - ${errorText}`);
      }

      const data = await response.json();
      console.log('üì• Custom Spiritual AI Response:', data);
      
      if (Array.isArray(data) && data[0]?.generated_text) {
        const fullText = data[0].generated_text;
        const generatedText = fullText.replace(prompt, '').trim();
        console.log('‚úÖ Custom spiritual guidance generated:', generatedText);
        return generatedText;
      } else {
        throw new Error('Invalid response format from Custom Spiritual AI');
      }
    } catch (error) {
      console.error('‚ùå Custom Spiritual AI call failed:', error);
      throw error;
    }
  }

  /**
   * Try Microsoft DialoGPT as fallback
   */
  private async tryMicrosoftDialoGPT(prompt: string): Promise<string | null> {
    try {
      const microsoftUrl = 'https://api-inference.huggingface.co/models/microsoft/DialoGPT-medium';
      
      // Add spiritual context to the prompt
      const spiritualPrompt = `Ruhsal bir rehber olarak, ${prompt}`;
      
      const response = await fetch(microsoftUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'User-Agent': 'SpiritualGuidance/1.0',
        },
        body: JSON.stringify({
          inputs: spiritualPrompt,
          parameters: {
            max_length: 300,
            temperature: 0.8,
            top_p: 0.9,
            do_sample: true,
            pad_token_id: 50256
          },
          options: {
            wait_for_model: true,
            use_cache: false
          }
        })
      });

      if (!response.ok) {
        const errorText = await response.text();
        console.error(`üö® Microsoft DialoGPT API Error [${response.status}]:`, errorText);
        throw new Error(`Microsoft DialoGPT API request failed: ${response.status} - ${errorText}`);
      }

      const data = await response.json();
      console.log('üì• Microsoft DialoGPT Response:', data);
      
      if (Array.isArray(data) && data[0]?.generated_text) {
        const fullText = data[0].generated_text;
        const generatedText = fullText.replace(spiritualPrompt, '').trim();
        console.log('‚úÖ Microsoft DialoGPT spiritual guidance generated:', generatedText);
        return generatedText;
      } else {
        throw new Error('Invalid response format from Microsoft DialoGPT');
      }
    } catch (error) {
      console.error('‚ùå Microsoft DialoGPT call failed:', error);
      throw error;
    }
  }

  /**
   * Generate spiritual fallback response when all AI models fail
   */
  private generateSpiritualFallbackResponse(prompt: string): string {
    console.log('üîÆ Generating spiritual fallback response...');
    
    // Analyze the prompt to provide contextual spiritual guidance
    const lowerPrompt = prompt.toLowerCase();
    
    if (lowerPrompt.includes('karar') || lowerPrompt.includes('decision')) {
      return 'ƒ∞√ß sesinizi dinleyin, sevgili ruh. Kalp merkezinizden gelen sezgileriniz size doƒüru yolu g√∂sterecektir. Meditasyon yaparak zihinsel g√ºr√ºlt√ºy√º susturun ve ruhunuzun bilgeliƒüine g√ºvenin.';
    }
    
    if (lowerPrompt.includes('ileti≈üim') || lowerPrompt.includes('communication')) {
      return 'Kalp merkezinizden konu≈üun, sevgili karde≈ü. Ger√ßek ileti≈üim, sevgi ve anlayƒ±≈üla kurulur. Kar≈üƒ±nƒ±zdakini yargƒ±lamadan dinleyin ve kendi ger√ßeƒüinizi sevgiyle payla≈üƒ±n.';
    }
    
    if (lowerPrompt.includes('adaptasyon') || lowerPrompt.includes('adaptation')) {
      return 'Hayatƒ±n akƒ±≈üƒ±na teslim olun, deƒüerli ruh. Deƒüi≈üim, b√ºy√ºmenin doƒüal bir par√ßasƒ±dƒ±r. Su gibi esnek olun, engellere direnmek yerine onlarƒ± a≈ümanƒ±n yollarƒ±nƒ± bulun.';
    }
    
    if (lowerPrompt.includes('liderlik') || lowerPrompt.includes('leadership')) {
      return 'Ger√ßek liderlik, √∂nce kendinizi y√∂netmekten ba≈ülar. ƒ∞√ß d√ºnyanƒ±zda huzuru bulduƒüunuzda, ba≈ükalarƒ±na da ƒ±≈üƒ±k olabilirsiniz. Sevgi ve bilgelikle rehberlik edin.';
    }
    
    if (lowerPrompt.includes('risk')) {
      return 'Korku, b√ºy√ºmenin √∂n√ºndeki en b√ºy√ºk engeldir. Ruhunuzun sesini dinleyin ve sezgilerinize g√ºvenin. Hesaplanmƒ±≈ü riskler almak, ruhsal geli≈üiminizin bir par√ßasƒ±dƒ±r.';
    }
    
    // Default spiritual guidance
    return 'Sevgili ruh, bu yolculukta size e≈ülik etmek i√ßin buradayƒ±m. Her deneyim, ruhsal geli≈üiminiz i√ßin bir fƒ±rsattƒ±r. Farkƒ±ndalƒ±k, sevgi ve sabƒ±rla ilerleyin. ƒ∞√ß d√ºnyanƒ±zda huzuru bulduƒüunuzda, dƒ±≈ü d√ºnyada da dengeyi yakalayacaksƒ±nƒ±z.';
  }

  /**
   * Parse spiritual AI response into structured recommendation
   */
  private parseSpiritualResponse(aiResponse: string, dimensionName: string): {
    title: string;
    description: string;
    actionItems: string[];
    resources: Array<{type: 'case-study' | 'mentorship' | 'tutorial' | 'spiritual-guidance' | 'spiritual-practice'; title: string; description: string; url?: string}>;
  } {
    // Clean and structure the AI response
    const cleanResponse = aiResponse.replace(/[\r\n]+/g, ' ').trim();
    
    return {
      title: `${dimensionName} - Ruhsal Rehberlik`,
      description: cleanResponse || `${dimensionName} alanƒ±nda ruhsal geli≈üim i√ßin ki≈üiselle≈ütirilmi≈ü rehberlik.`,
      actionItems: [
        'G√ºnl√ºk meditasyon pratiƒüi yapƒ±n',
        'ƒ∞√ß g√∂zlem ve farkƒ±ndalƒ±k egzersizleri',
        'Enerji merkezleri √ºzerinde √ßalƒ±≈üma'
      ],
      resources: [
        {
          type: 'spiritual-guidance' as const,
          title: 'Ruhsal Geli≈üim Rehberi',
          description: 'Ki≈üiselle≈ütirilmi≈ü manevi pratikler ve √∂ƒüretiler',
          url: '#spiritual-resources'
        }
      ]
    };
  }

  /**
   * Generate overall spiritual insight
   */
  private async generateSpiritualOverallInsight(scores: DimensionScore[], userName: string): Promise<string> {
    try {
      const averageScore = scores.reduce((sum, score) => sum + (score.score / score.maxScore), 0) / scores.length * 100;
      const prompt = `${userName}, genel ruhsal geli≈üim seviyeniz %${averageScore.toFixed(1)}. Bu yolculukta size nasƒ±l rehberlik edebilirim? Hangi enerji merkezleri dengelenmeye ihtiya√ß duyuyor?`;
      
      const insight = await this.callSpiritualAI(prompt);
      return insight || `${userName}, ruhsal yolculuƒüunuzda size e≈ülik etmek i√ßin buradayƒ±m. Her adƒ±mda farkƒ±ndalƒ±k ve sevgiyle ilerleyin.`;
    } catch (error) {
      console.warn('Failed to generate spiritual insight:', error);
      return `${userName}, ruhsal yolculuƒüunuzda size e≈ülik etmek i√ßin buradayƒ±m. Her adƒ±mda farkƒ±ndalƒ±k ve sevgiyle ilerleyin.`;
    }
  }

  /**
   * Create fallback spiritual recommendation when AI fails
   */
  private createFallbackSpiritualRecommendation(
    score: DimensionScore,
    percentage: number,
    index: number,
    dimensionName: string
  ): RecommendationItem {
    const type = percentage >= 80 ? 'mastery' : percentage >= 50 ? 'growth' : 'foundation';
    
    // Dynamic spiritual guidance based on actual performance
    const getPersonalizedGuidance = (dimension: string, perf: number) => {
      const level = perf >= 80 ? 'y√ºksek' : perf >= 60 ? 'iyi' : perf >= 40 ? 'orta' : 'geli≈üim gerektiren';
      
      const guidanceMap: { [key: string]: any } = {
        'Karar Verme': {
          high: {
            title: 'Sezgisel Liderlik Ustalƒ±ƒüƒ±',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±zla karar verme konusunda g√º√ßl√º bir ruhsal baƒülantƒ±nƒ±z var. ƒ∞√ß bilgeliƒüinizi ba≈ükalarƒ±na rehberlik etmek i√ßin kullanƒ±n.`,
            actions: ['Sezgisel liderlik meditasyonu', 'Ba≈ükalarƒ±na mentorluk', 'Y√ºksek frekans kararlar alma']
          },
          medium: {
            title: 'ƒ∞√ß Bilgelik Geli≈ütirme',
            description: `%${perf.toFixed(1)} seviyenizde, karar verme s√ºre√ßlerinizde i√ß sesinizi daha g√º√ßl√º duyabilirsiniz. Sezgilerinizi geli≈ütirme zamanƒ±.`,
            actions: ['G√ºnl√ºk sezgi meditasyonu', 'Karar √∂ncesi i√ß g√∂zlem', 'Ruhsal danƒ±≈ümanlƒ±k alma']
          },
          low: {
            title: 'Ruhsal Karar Verme Temelleri',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±z, karar verme konusunda ruhsal temellerinizi g√º√ßlendirme ihtiyacƒ±nƒ±zƒ± g√∂steriyor. ƒ∞√ß sesinizi dinlemeyi √∂ƒürenin.`,
            actions: ['Temel meditasyon pratiƒüi', 'ƒ∞√ß ses farkƒ±ndalƒ±ƒüƒ±', 'Ruhsal rehber bulma']
          }
        },
        'ƒ∞leti≈üim': {
          high: {
            title: 'Kalp Merkezli ƒ∞leti≈üim Ustalƒ±ƒüƒ±',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±zla ileti≈üimde ruhsal bir derinliƒüe sahipsiniz. Bu g√ºc√ºn√ºz√º iyile≈ütirici ileti≈üim i√ßin kullanƒ±n.`,
            actions: ['Empati meditasyonu', 'Ruhsal ileti≈üim √∂ƒüretisi', 'Kalp √ßakrasƒ± √ßalƒ±≈ümasƒ±']
          },
          medium: {
            title: 'Sevgi Dolu ƒ∞leti≈üim Geli≈ütirme',
            description: `%${perf.toFixed(1)} seviyenizde, ileti≈üiminize daha fazla sevgi ve anlayƒ±≈ü katabilirsiniz. Kalp merkezinizden konu≈ümayƒ± √∂ƒürenin.`,
            actions: ['Kalp a√ßma meditasyonu', 'Dinleme pratiƒüi', 'Sevgi dolu konu≈üma']
          },
          low: {
            title: 'Ruhsal ƒ∞leti≈üim Temelleri',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±z, ileti≈üimde ruhsal farkƒ±ndalƒ±ƒüƒ±nƒ±zƒ± artƒ±rma ihtiyacƒ±nƒ±zƒ± g√∂steriyor. √ñnce kendinizle ileti≈üimi g√º√ßlendirin.`,
            actions: ['ƒ∞√ß diyalog farkƒ±ndalƒ±ƒüƒ±', 'Nefes √ßalƒ±≈ümasƒ±', 'Sessizlik pratiƒüi']
          }
        },
        'Adaptasyon': {
          high: {
            title: 'Akƒ±≈ü Halinde Ya≈üam Ustalƒ±ƒüƒ±',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±zla deƒüi≈üimlere uyumda ruhsal bir esnekliƒüe sahipsiniz. Bu bilgeliƒüinizi ba≈ükalarƒ±yla payla≈üƒ±n.`,
            actions: ['Akƒ±≈ü meditasyonu', 'Deƒüi≈üim rehberliƒüi', 'Esneklik √∂ƒüretisi']
          },
          medium: {
            title: 'Ruhsal Esneklik Geli≈ütirme',
            description: `%${perf.toFixed(1)} seviyenizde, deƒüi≈üimlere kar≈üƒ± daha fazla ruhsal esneklik geli≈ütirebilirsiniz. Akƒ±≈üa teslim olmayƒ± √∂ƒürenin.`,
            actions: ['Teslim olma meditasyonu', 'Deƒüi≈üim kabul√º', 'Moment farkƒ±ndalƒ±ƒüƒ±']
          },
          low: {
            title: 'Deƒüi≈üim Kabul√º Temelleri',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±z, deƒüi≈üimlere kar≈üƒ± ruhsal direncin olduƒüunu g√∂steriyor. Akƒ±≈üa g√ºvenmeyi √∂ƒürenin.`,
            actions: ['G√ºven meditasyonu', 'Korku salma √ßalƒ±≈ümasƒ±', 'Temel esneklik pratiƒüi']
          }
        },
        'ƒ∞nisiyatif Alma': {
          high: {
            title: 'Ruhsal √ñnc√ºl√ºk Ustalƒ±ƒüƒ±',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±zla inisiyatif almada ruhsal bir cesaret g√∂steriyorsunuz. Bu g√ºc√ºn√ºz√º hizmet i√ßin kullanƒ±n.`,
            actions: ['Cesaret meditasyonu', 'Ruhsal liderlik', 'Hizmet odaklƒ± eylem']
          },
          medium: {
            title: 'ƒ∞√ß Cesaret Geli≈ütirme',
            description: `%${perf.toFixed(1)} seviyenizde, inisiyatif almada daha fazla ruhsal cesaret geli≈ütirebilirsiniz. ƒ∞√ß g√ºc√ºn√ºz√º ke≈üfedin.`,
            actions: ['G√º√ß meditasyonu', 'Cesaret affirmasyonlarƒ±', 'K√º√ß√ºk adƒ±mlar atma']
          },
          low: {
            title: 'Ruhsal Cesaret Temelleri',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±z, inisiyatif almada ruhsal cesaretinizi g√º√ßlendirme ihtiyacƒ±nƒ±zƒ± g√∂steriyor. ƒ∞√ß g√ºc√ºn√ºz√º bulun.`,
            actions: ['√ñz g√ºven meditasyonu', 'Korku d√∂n√º≈ü√ºm√º', 'Temel cesaret pratiƒüi']
          }
        },
        'Stratejik D√º≈ü√ºnce': {
          high: {
            title: 'Ruhsal Vizyon Ustalƒ±ƒüƒ±',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±zla stratejik d√º≈ü√ºncede ruhsal bir derinliƒüe sahipsiniz. Vizyonerinizi manifestasyona d√∂n√º≈üt√ºr√ºn.`,
            actions: ['Vizyon meditasyonu', 'Manifestasyon √ßalƒ±≈ümasƒ±', 'Ruhsal planlama']
          },
          medium: {
            title: 'ƒ∞√ß G√∂r√º Geli≈ütirme',
            description: `%${perf.toFixed(1)} seviyenizde, stratejik d√º≈ü√ºncenize daha fazla ruhsal derinlik katabilirsiniz. ƒ∞√ß g√∂r√ºn√ºz√º g√º√ßlendirin.`,
            actions: ['ƒ∞√ß g√∂r√º meditasyonu', 'Sezgisel planlama', 'Ruhsal perspektif']
          },
          low: {
            title: 'Ruhsal Perspektif Temelleri',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±z, stratejik d√º≈ü√ºncede ruhsal perspektifinizi geli≈ütirme ihtiyacƒ±nƒ±zƒ± g√∂steriyor. B√ºy√ºk resmi g√∂rmeyi √∂ƒürenin.`,
            actions: ['Perspektif meditasyonu', 'B√ºy√ºk resim farkƒ±ndalƒ±ƒüƒ±', 'Temel vizyon √ßalƒ±≈ümasƒ±']
          }
        },
        'Takƒ±m √áalƒ±≈ümasƒ±': {
          high: {
            title: 'Ruhsal Birlik Ustalƒ±ƒüƒ±',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±zla takƒ±m √ßalƒ±≈ümasƒ±nda ruhsal bir uyum yaratƒ±yorsunuz. Bu g√ºc√ºn√ºz√º toplumsal iyile≈ütirme i√ßin kullanƒ±n.`,
            actions: ['Birlik meditasyonu', 'Grup enerji √ßalƒ±≈ümasƒ±', 'Toplumsal hizmet']
          },
          medium: {
            title: 'Ruhsal Uyum Geli≈ütirme',
            description: `%${perf.toFixed(1)} seviyenizde, takƒ±m √ßalƒ±≈ümasƒ±nda daha fazla ruhsal uyum yaratabilirsiniz. Kalp baƒülantƒ±sƒ±nƒ± g√º√ßlendirin.`,
            actions: ['Kalp baƒülantƒ±sƒ± meditasyonu', 'Empati geli≈ütirme', 'Uyum pratiƒüi']
          },
          low: {
            title: 'Ruhsal Baƒülantƒ± Temelleri',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±z, takƒ±m √ßalƒ±≈ümasƒ±nda ruhsal baƒülantƒ±nƒ±zƒ± g√º√ßlendirme ihtiyacƒ±nƒ±zƒ± g√∂steriyor. √ñnce kendinizle baƒülantƒ± kurun.`,
            actions: ['√ñz sevgi meditasyonu', 'ƒ∞√ß barƒ±≈ü √ßalƒ±≈ümasƒ±', 'Temel baƒülantƒ± pratiƒüi']
          }
        },
        'Risk Liderliƒüi': {
          high: {
            title: 'Ruhsal Cesaret Liderliƒüi',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±zla risk liderliƒüinde ruhsal bir cesaret g√∂steriyorsunuz. Bu bilgeliƒüinizi ba≈ükalarƒ±na ilham i√ßin kullanƒ±n.`,
            actions: ['Cesaret liderliƒüi meditasyonu', 'Risk bilgeliƒüi payla≈üƒ±mƒ±', 'ƒ∞lham verici eylem']
          },
          medium: {
            title: 'Ruhsal Risk Bilgeliƒüi',
            description: `%${perf.toFixed(1)} seviyenizde, risk liderliƒüinde daha fazla ruhsal bilgelik geli≈ütirebilirsiniz. Sezgilerinize g√ºvenin.`,
            actions: ['Sezgi g√º√ßlendirme', 'Risk deƒüerlendirme meditasyonu', 'Bilgelik geli≈ütirme']
          },
          low: {
            title: 'Ruhsal G√ºven Temelleri',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±z, risk liderliƒüinde ruhsal g√ºveninizi artƒ±rma ihtiyacƒ±nƒ±zƒ± g√∂steriyor. ƒ∞√ß g√ºc√ºn√ºz√º ke≈üfedin.`,
            actions: ['G√ºven meditasyonu', 'ƒ∞√ß g√º√ß bulma', 'Temel cesaret √ßalƒ±≈ümasƒ±']
          }
        },
        'Risk Zekasƒ±': {
          high: {
            title: 'Sezgisel Risk Ustalƒ±ƒüƒ±',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±zla risk zekasƒ±nda sezgisel bir derinliƒüe sahipsiniz. Bu g√ºc√ºn√ºz√º bilge kararlar i√ßin kullanƒ±n.`,
            actions: ['Sezgisel analiz meditasyonu', 'Risk sezgisi geli≈ütirme', 'Bilge karar verme']
          },
          medium: {
            title: 'Ruhsal Risk Farkƒ±ndalƒ±ƒüƒ±',
            description: `%${perf.toFixed(1)} seviyenizde, risk zekasƒ±nda daha fazla ruhsal farkƒ±ndalƒ±k geli≈ütirebilirsiniz. ƒ∞√ß bilgeliƒüinizi kullanƒ±n.`,
            actions: ['Farkƒ±ndalƒ±k meditasyonu', 'Sezgisel deƒüerlendirme', 'ƒ∞√ß bilgelik eri≈üimi']
          },
          low: {
            title: 'Ruhsal Sezgi Temelleri',
            description: `%${perf.toFixed(1)} performansƒ±nƒ±z, risk zekasƒ±nda ruhsal sezgilerinizi geli≈ütirme ihtiyacƒ±nƒ±zƒ± g√∂steriyor. ƒ∞√ß sesinizi dinlemeyi √∂ƒürenin.`,
            actions: ['Temel sezgi meditasyonu', 'ƒ∞√ß ses farkƒ±ndalƒ±ƒüƒ±', 'Sezgi geli≈ütirme pratiƒüi']
          }
        }
      };

      const dimensionGuidance = guidanceMap[dimensionName];
      if (!dimensionGuidance) {
        return {
          title: `${dimensionName} - Ruhsal Geli≈üim`,
          description: `%${perf.toFixed(1)} performansƒ±nƒ±zla ${dimensionName} alanƒ±nda ruhsal farkƒ±ndalƒ±ƒüƒ±nƒ±zƒ± artƒ±rabilirsiniz.`,
          actions: ['Farkƒ±ndalƒ±k pratiƒüi', 'ƒ∞√ß g√∂zlem', 'Manevi √ßalƒ±≈ümalar']
        };
      }

      if (perf >= 70) return dimensionGuidance.high;
      if (perf >= 40) return dimensionGuidance.medium;
      return dimensionGuidance.low;
    };

    const guidance = getPersonalizedGuidance(dimensionName, percentage);

    return {
      id: `spiritual_personalized_${score.dimension}_${index}`,
      type: type as 'mastery' | 'growth' | 'foundation',
      title: guidance.title,
      description: guidance.description,
      dimension: dimensionName,
      score: percentage,
      actionItems: guidance.actions,
      resources: [
        {
          type: 'spiritual-practice' as const,
          title: 'Ki≈üiselle≈ütirilmi≈ü Ruhsal Pratik',
          description: `${dimensionName} alanƒ±nda %${percentage.toFixed(1)} performansƒ±nƒ±za √∂zel manevi pratikler`
        },
        {
          type: 'spiritual-guidance' as const,
          title: 'Ruhsal Geli≈üim Rehberi',
          description: 'Seviye odaklƒ± ruhsal geli≈üim √∂nerileri ve uygulamalar'
        }
      ]
    };
  }

  /**
   * Enhanced spiritual fallback when all AI calls fail
   */
  private generateEnhancedSpiritualFallback(
    scores: DimensionScore[], 
    sessionId: string,
    userInfo?: { firstName: string; lastName: string }
  ): PersonalizedRecommendations {
    console.log('üîÆ Generating enhanced spiritual fallback recommendations...');
    
    const userName = userInfo?.firstName || 'Sevgili ruh';
    const recommendations: RecommendationItem[] = [];
    
    const dimensionMap: { [key: string]: string } = {
      'DM': 'Karar Verme',
      'IN': 'ƒ∞nisiyatif Alma',
      'AD': 'Adaptasyon', 
      'CM': 'ƒ∞leti≈üim',
      'ST': 'Stratejik D√º≈ü√ºnce',
      'TO': 'Takƒ±m √áalƒ±≈ümasƒ±',
      'RL': 'Risk Liderliƒüi',
      'RI': 'Risk Zekasƒ±'
    };
    
    scores.forEach((score, index) => {
      const percentage = (score.score / score.maxScore) * 100;
      const dimensionName = dimensionMap[score.dimension] || score.dimension;
      
      const recommendation = this.createFallbackSpiritualRecommendation(score, percentage, index, dimensionName);
      recommendations.push(recommendation);
    });

    // Generate personalized overall insight based on performance
    const averageScore = scores.reduce((sum, score) => sum + (score.score / score.maxScore), 0) / scores.length * 100;
    const strongAreas = scores.filter(s => (s.score / s.maxScore) * 100 >= 70);
    const developmentAreas = scores.filter(s => (s.score / s.maxScore) * 100 < 50);
    
    let overallInsight = `${userName}, ruhsal analiz sonu√ßlarƒ±nƒ±z %${averageScore.toFixed(1)} genel performans g√∂steriyor. `;
    
    if (averageScore >= 80) {
      overallInsight += `Ruhsal geli≈üiminizde √ºst√ºn bir seviyedesiniz. Bu bilgeliƒüinizi ba≈ükalarƒ±na rehberlik etmek i√ßin kullanƒ±n. `;
    } else if (averageScore >= 60) {
      overallInsight += `Ruhsal yolculuƒüunuzda g√º√ßl√º bir temel olu≈üturmu≈üsunuz. Daha derin farkƒ±ndalƒ±k i√ßin √ßalƒ±≈ümaya devam edin. `;
    } else if (averageScore >= 40) {
      overallInsight += `Ruhsal geli≈üiminizde dengeli bir durumdaysƒ±nƒ±z. Bazƒ± alanlarda g√º√ßl√ºs√ºn√ºz, bazƒ±larƒ±nda geli≈üim fƒ±rsatlarƒ± var. `;
    } else {
      overallInsight += `Ruhsal yolculuƒüunuzun ba≈üƒ±nda olabilirsiniz. Her adƒ±m, b√ºy√ºk bir d√∂n√º≈ü√ºm√ºn par√ßasƒ±. Sabƒ±rla ve sevgiyle ilerleyin. `;
    }

    if (strongAreas.length > 0) {
      const strongAreaNames = strongAreas.map(s => dimensionMap[s.dimension] || s.dimension).join(', ');
      overallInsight += `G√º√ßl√º olduƒüunuz alanlar: ${strongAreaNames}. Bu yeteneklerinizi daha da derinle≈ütirin. `;
    }

    if (developmentAreas.length > 0) {
      const developmentAreaNames = developmentAreas.map(s => dimensionMap[s.dimension] || s.dimension).join(', ');
      overallInsight += `Geli≈üim alanlarƒ±nƒ±z: ${developmentAreaNames}. Bu alanlarda √∂zel dikkat ve pratik gerekiyor. `;
    }

    overallInsight += `Her yetkinlik alanƒ±, ruhsal geli≈üiminizin farklƒ± bir boyutunu temsil ediyor. Farkƒ±ndalƒ±k, sevgi ve sabƒ±rla bu yolda ilerlemeye devam edin. ƒ∞√ß d√ºnyanƒ±zda huzuru bulduƒüunuzda, dƒ±≈ü d√ºnyada da dengeyi yakalayacaksƒ±nƒ±z.`;

    return {
      sessionId,
      userId: userInfo ? `${userInfo.firstName}_${userInfo.lastName}` : undefined,
      recommendations,
      generatedAt: new Date().toISOString(),
      overallInsight
    };
  }

  /**
   * Test the spiritual AI connection
   */
  async testSpiritualAIConnection(): Promise<boolean> {
    try {
      console.log('üß™ Testing Spiritual AI connection...');
      
      const testPrompt = 'Merhaba, bana kƒ±sa bir ruhsal rehberlik verebilir misin?';
      const response = await this.callSpiritualAI(testPrompt);
      
      console.log('‚úÖ Spiritual AI test successful:', response);
      return true;
    } catch (error) {
      console.error('‚ùå Spiritual AI test failed:', error);
      return false;
    }
  }
} 